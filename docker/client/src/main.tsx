import React from 'react';
import * as ReactDOM from 'react-dom/client';
import Index from './routes/index';

import './index.css';

import {
  createBrowserRouter,
  RouterProvider,
} from "react-router-dom";

import {
  ApolloClient,
  ApolloProvider,
  createHttpLink,
  InMemoryCache,
} from '@apollo/client';

import {setContext} from '@apollo/client/link/context';

import {ChakraProvider} from '@chakra-ui/react';
import Admin from './routes/admin';

const httpLink = createHttpLink({
  uri: 'http://localhost:5000',
  credentials: 'include',
});

const authLink = setContext((_, {headers}) => {
  return {
    headers: {
      ...headers,
      cookie: document.cookie ? document.cookie : '',
    },
  };
});

const client = new ApolloClient({
  link: authLink.concat(httpLink),
  cache: new InMemoryCache({
    addTypename: false,
  }),
  credentials: 'include',
});

const router = createBrowserRouter([
  {
    path: "/",
    element: <Index />,
  },
  {
    path: "/admin",
    element: <Admin />,
  },
]);

const rootElement = document.getElementById('root') as HTMLElement;
ReactDOM.createRoot(rootElement).render(
  <React.StrictMode>
    <ApolloProvider client={client}>
      <ChakraProvider>
        <RouterProvider router={router} />
      </ChakraProvider>
    </ApolloProvider>
  </React.StrictMode>
);
