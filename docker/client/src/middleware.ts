// middleware.ts
import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'
import { verify } from "@utils/jwt";

export async function middleware(req: NextRequest) {
  const jwt = req.cookies.get("token");

  const url = req.url;
  const { pathname } = req.nextUrl;

  const APP_SECRET = process.env.APP_SECRET as string;

  if (pathname.startsWith('/app')) {

    if (jwt === undefined) {
      return NextResponse.redirect(new URL("/login", url));
    }

    try {
      await verify(jwt, APP_SECRET);
      return NextResponse.next();
    } catch (err) {
      return NextResponse.redirect(new URL("/login", url));
    }

  } else if (pathname.startsWith("/")) {

    if (jwt === undefined) {
      return NextResponse.next();
    }

    try {
      await verify(jwt, APP_SECRET);
      return NextResponse.redirect(new URL("/app", url));
    } catch (err) {
      return NextResponse.next();
    }

  }
  return NextResponse.next();
}

// Supports both a single string value or an array of matchers
export const config = {
  matcher: ['/app', "/app/:path*", "/login", "/register", "/"],
}
