import "@styles/globals.css";
import 'beautiful-react-diagrams/styles.css';

// * Reset css
import "sanitize.css";
import "sanitize.css/forms.css";
import "sanitize.css/typography.css";

import { Provider } from "jotai";
import { ThemeProvider } from "next-themes";
import { useRouter } from "next/router";
import { FC } from "react";

import {
  ApolloClient,
  ApolloProvider,
  createHttpLink,
  InMemoryCache,
} from "@apollo/client";

import { setContext } from "@apollo/client/link/context";

import Layout from "@layout/Layout";

import type { AppProps } from "next/app";

const httpLink = createHttpLink({
  uri: process.env.SERVER_HOST,
  credentials: "include",
});

const authLink = setContext((_, { headers }) => {
  return {
    headers: {
      ...headers,
      cookie: document.cookie ? document.cookie : "",
    },
  };
});

const client = new ApolloClient({
  link: authLink.concat(httpLink),
  cache: new InMemoryCache({
    addTypename: false,
  }),
  credentials: "include",
});

const App: FC<AppProps> = ({ Component, pageProps }) => {
  const { pathname } = useRouter();

  return (
    <ApolloProvider client={client}>
      <Provider>
        <ThemeProvider enableSystem={true} attribute='class'>
          <Layout type={pathname.includes("app") ? "app" : "main"}>
            <Component {...pageProps} />
          </Layout>
        </ThemeProvider>
      </Provider>
    </ApolloProvider >
  );
};

export default App;

