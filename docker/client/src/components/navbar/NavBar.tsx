import clsx from "clsx";
import Link from "next/link";
import React, { FC, MouseEventHandler } from "react";

import { gql, useMutation } from "@apollo/client";
import ColorModeIcon from "src/icons/ColorModeIcon";
import { useRouter } from "next/router";

const LOGOUT_MUTATION = gql`
   mutation {
      logout {
         token
         user {
            id
         }
      }
   }
`;

interface IProps {
  type: "app" | "default";
}

const NavBar: FC<IProps> = ({ type }) => {

  const [logout] = useMutation(LOGOUT_MUTATION);
  const router = useRouter();

  const handleClick: MouseEventHandler = async (e) => {
    console.log("logout");
    e.preventDefault();
    await logout();
    router.push("/");
  };

  return (
    <nav
      className={clsx(
        "flex justify-center items-center gap-x-5 w-full h-16 text-white",
        {
          "bg-blue-500 dark:bg-green-500": true,
        }
      )}
    >
      <Link href='/'>
        <a className='flex items-center h-full px-3 duration-100 hover:bg-blue-600'>
          Accueil
        </a>
      </Link>
      <Link href='/login'>
        <a className='flex items-center h-full px-3 duration-100 hover:bg-blue-600'>
          Se connecter
        </a>
      </Link>
      <Link href='/register'>
        <a className='flex items-center h-full px-3 duration-100 hover:bg-blue-600'>
          Cr√©er un compte
        </a>
      </Link>
      <Link href='/app'>
        <a className='flex items-center h-full px-3 duration-100 hover:bg-blue-600'>
          APP
        </a>
      </Link>
      <ColorModeIcon />
      {type === "app" && (
        <button className='p-5 bg-red-500 rounded' onClick={handleClick}>
          Log out
        </button>
      )}
    </nav>
  );
};

export default NavBar;

